name: Android Release Build

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Android Release Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Download keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks

      - name: Set up signing properties in gradle.properties
        run: |
          echo "cash.andrew.lightalarm.keystorePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> gradle.properties
          echo "cash.andrew.lightalarm.aliasKeyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> gradle.properties
          echo "cash.andrew.lightalarm.storeKeyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> gradle.properties
          echo "cash.andrew.lightalarm.keystoreLocation=$(pwd)/keystore.jks" >> gradle.properties

      - name: Set build number in gradle.properties
        run: |
          echo "cash.andrew.lightalarm.buildNumber=${{ github.run_id }}" >> gradle.properties

      - name: Build with Gradle (using gradle/actions)
        uses: gradle/actions/setup-gradle@v3

      - name: Build signed APKs/AABs
        run: ./gradlew assembleRelease bundleRelease --no-daemon

      - name: Upload APK and AAB as workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: |
            build/outputs/apk/release/*.apk
            build/outputs/bundle/release/*.aab

      - name: Import GPG key
        run: |
          echo "${{ secrets.PGP_KEY }}" > private.key
          gpg --batch --passphrase "${{ secrets.PGP_PASSWORD }}" --import private.key

      - name: Sign APKs with GPG
        run: |
          for file in build/outputs/apk/release/*.apk; do
            gpg --batch --yes --pinentry-mode loopback --passphrase "${{ secrets.PGP_PASSWORD }}" --armor --detach-sign "$file"
          done

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/outputs/apk/release/*.apk
            build/outputs/apk/release/*.apk.asc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: rocks.ghostapps.lightalarm
          releaseFiles: build/outputs/bundle/release/*.aab
          track: production
          status: completed
