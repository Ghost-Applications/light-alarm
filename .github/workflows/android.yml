name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Android Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Download keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks

      - name: Set up signing properties in gradle.properties
        run: |
          echo "cash.andrew.lightalarm.keystorePassword.keystorePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> gradle.properties
          echo "cash.andrew.lightalarm.keystorePassword.aliasKeyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> gradle.properties
          echo "cash.andrew.lightalarm.keystorePassword.storeKeyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> gradle.properties
          echo "cash.andrew.lightalarm.keystorePassword.keystoreLocation=$(pwd)/keystore.jks" >> gradle.properties

      - name: Set build number in gradle.properties
        run: |
          echo "cash.andrew.lightalarm.keystorePassword.buildNumber=${{ github.run_number }}" >> gradle.properties

      - name: Build with Gradle (using gradle/actions)
        uses: gradle/actions/setup-gradle@v3

      - name: Build signed APKs and AABs (debug and release)
        run: ./gradlew assembleDebug assembleRelease bundleDebug bundleRelease --no-daemon

      - name: Import GPG key
        run: |
          echo "${{ secrets.PGP_KEY }}" > private.key
          gpg --batch --passphrase "${{ secrets.PGP_PASSWORD }}" --import private.key

      - name: Sign APKs and AABs with GPG
        run: |
          for file in build/outputs/apk/debug/*.apk build/outputs/apk/release/*.apk build/outputs/bundle/debug/*.aab build/outputs/bundle/release/*.aab; do
            if [ -f "$file" ]; then
              gpg --batch --yes --pinentry-mode loopback --passphrase "${{ secrets.PGP_PASSWORD }}" --armor --detach-sign "$file"
            fi
          done

      - name: Upload APK, AAB, and ASC as workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: |
            build/outputs/apk/debug/*.apk
            build/outputs/apk/debug/*.apk.asc
            build/outputs/apk/release/*.apk
            build/outputs/apk/release/*.apk.asc
            build/outputs/bundle/debug/*.aab
            build/outputs/bundle/debug/*.aab.asc
            build/outputs/bundle/release/*.aab
            build/outputs/bundle/release/*.aab.asc

      - name: Upload to Google Play (Internal Test Track)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: rocks.ghostapps.lightalarm
          releaseFiles: build/outputs/bundle/release/*.aab
          track: internal
          status: completed
