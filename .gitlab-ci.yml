image: openjdk:17-jdk-slim

variables:
  ANDROID_COMPILE_SDK: "34"
  ANDROID_BUILD_TOOLS: "34.0.0"
  ANDROID_SDK_TOOLS:   "11076708"

stages:
  - build
  - deploy

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  - mkdir -p android-sdk-linux/cmdline-tools
  - unzip -d android-sdk-linux/cmdline-tools android-sdk.zip
  - mv android-sdk-linux/cmdline-tools/cmdline-tools android-sdk-linux/cmdline-tools/latest
  - echo y | android-sdk-linux/cmdline-tools/latest/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/cmdline-tools/latest/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/cmdline-tools/latest/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/cmdline-tools/latest/bin/sdkmanager --licenses
  - set -o pipefail

  - echo $PUBLISH_KEY > keys/publish-key.json

  - export GRADLE_USER_HOME=`pwd`/.gradle
  - chmod +x ./gradlew

  - export LIGHT_ALARM_BUILD_NUMBER=$(($CI_PIPELINE_IID + 526711813))

build:
  stage: build
  only:
    - branches
  script:
    - ./gradlew build lintRelease --no-daemon --console=plain
  artifacts:
    paths:
      - build/outputs/

masterBuild:
  stage: deploy
  script:
    - ./gradlew publishReleaseBundle --no-daemon --console=plain
  only:
    - master
